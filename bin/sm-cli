#!/bin/bash

# Keep track of where our original binary is called from.
export SM_BIN_PATH="$(cd "$(dirname "$0")"; pwd)/$(basename "$0")"

# Find the dirname path to the fully resolved command in order to locate entry point for sm codebase.
# @credit http://stackoverflow.com/a/246128/330439
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
BASE_PATH="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# TODO: Only match until first non-option argument is found. i.e. argument not prefixed by '-'
DIR_ARG=$(echo "$@" | perl -lpe '($_) = /\s*--dir\s*(\S*)\s*/')

PLATFORM_BIN_NAME="node"

PLATFORM_BIN_PATH=$(which "$PLATFORM_BIN_NAME")

if [ -z $PLATFORM_BIN_PATH ]; then
    echo "Fatal Error: No binary '$PLATFORM_BIN_NAME' found on PATH '$PATH'!"
    exit 1
fi

"$PLATFORM_BIN_PATH" "$BASE_PATH/sm-cli.js" "$@"

if [ "$DIR_ARG" != "" ]; then
	DIR_ARG="$DIR_ARG/"
fi
if [ -f "$DIR_ARG./.sm-reload-shell" ]; then
	rm "$DIR_ARG./.sm-reload-shell"
	# TODO: Call `exec bash` equivalent to re-index commands on `PATH`.
	echo ""
	echo "  NOTE: Run 'exec bash' to re-index commands on 'PATH'!"
	echo ""
fi
if [ -f "$DIR_ARG./.sm-switch" ]; then
	"$DIR_ARG./.sm-switch"
fi
